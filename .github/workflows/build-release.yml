name: Build/release

on: [pull_request]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            NPM_COMMAND: mac

          - os: ubuntu-latest
            NPM_COMMAND: linux

          - os: windows-latest
            NPM_COMMAND: win

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Get git commit
        id: git-commit
        run: echo "::set-output name=sha::$(git rev-parse --short HEAD)"

      - name: Get build date
        id: build-date
        run: echo "::set-output name=date::$(date)"

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn

      - run: echo ${{ matrix.NPM_COMMAND }}

      - name: Build releases
        run: ./node_modules/.bin/cross-env DEBUG_PROD=true yarn package-${{ matrix.NPM_COMMAND }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ steps.git-commit.outputs.sha }}
          BUILD_DATE: ${{ steps.build-date.outputs.date }}

      - uses: actions/upload-artifact@v2
        name: Upload Windows build
        if: matrix.os == 'windows-latest'
        with:
          name: stacks-wallet-${{ steps.git-commit.outputs.sha }}-windows
          path: |
            release/**/*.exe
            release/**/*.msi

      - uses: actions/upload-artifact@v2
        name: Upload MacOS build
        if: matrix.os == 'macos-latest'
        with:
          name: stacks-wallet-${{ steps.git-commit.outputs.sha }}-macos
          path: release/**/*.dmg

      - uses: actions/upload-artifact@v2
        name: Upload Linux build
        if: matrix.os == 'ubuntu-latest'
        with:
          name: stacks-wallet-${{ steps.git-commit.outputs.sha }}-linux
          path: |
            release/**/*.deb
            release/**/*.rpm
