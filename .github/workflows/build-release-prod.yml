name: Build/release production

on: [push]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            NPM_COMMAND: mac

          - os: ubuntu-latest
            NPM_COMMAND: linux

          - os: windows-latest
            NPM_COMMAND: win

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Variables
        id: vars
        run: |
          echo "::set-output name=version::$(cat package.json | jq -r .version)"
          echo "::set-output name=branch_name::$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=pull_request_id::$(echo $GITHUB_REF)"

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Install packages
        run: yarn

      - name: Build releases
        run: ./node_modules/.bin/cross-env yarn package-${{ matrix.NPM_COMMAND }}
        env:
          SHA: ${{ github.event.pull_request.head.sha }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST: ${{ steps.vars.outputs.pull_request_id }}
          BRANCH_NAME: ${{ steps.vars.outputs.branch_name }}

      - uses: actions/upload-artifact@v2
        name: Upload Windows build
        if: matrix.os == 'windows-latest'
        with:
          name: stacks-wallet-prod-${{ steps.vars.outputs.version }}-windows
          path: |
            release/**/*.exe
            release/**/*.msi

      - uses: actions/upload-artifact@v2
        name: Upload MacOS build
        if: matrix.os == 'macos-latest'
        with:
          name: stacks-wallet-prod-${{ steps.vars.outputs.version }}-macos
          path: release/**/*.dmg

      - uses: actions/upload-artifact@v2
        name: Upload Linux build
        if: matrix.os == 'ubuntu-latest'
        with:
          name: stacks-wallet-prod-${{ steps.vars.outputs.version }}-linux
          path: |
            release/**/*.deb
            release/**/*.rpm
